{"version":3,"file":"src_pages_FilteredVideos_js-c28510fa81ac8b0d2fff.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AAAA;;AAAA;;AACA;AAAA;;AAAA;;AACA;;AADA;AA6BA;AAAA;AAAA;AACA;AACA;;AAEA;AAAA;AAAA;AACA;AAGA;;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;;AAnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAFA;AAaA;;AAdA;AAAA;AAAA;AAiBA;AACA;AAlBA;AAAA;AAAA;AAoBA;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AA3BA;AAAA;AAAA;AAyDA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAKA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAcA;AAlFA;;AAAA;AAAA;AAqFA","sources":["webpack://omniscraper_frontend/./src/pages/FilteredVideos.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router\";\r\nimport {connect} from 'react-redux';\r\n\r\nconst List = React.lazy(() => import(\"../components/List\"));\r\n\r\nexport class FilteredVideos extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: false,\r\n      loading: false,\r\n      videos: [],\r\n      loadingTags: false,\r\n      slug: this.props.match.params.slug,\r\n      limit: 12,\r\n      offset: 0,\r\n      hasMore: true,\r\n      videosLoadingError: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadVideos();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.match.params.slug !== this.props.match.params.slug) {\r\n      this.setState(\r\n        { slug: this.props.match.params.slug, videos: [], offset: 0 },\r\n        () => this.loadVideos()\r\n      );\r\n    }\r\n  }\r\n\r\n  loadVideos = () => {\r\n    const { limit, offset } = this.state;\r\n    const slug = this.props.match.params.slug;\r\n    const url = `/api/tags/${slug}?limit=${limit}&offset=${offset}`;\r\n\r\n    this.setState({ loading: true }, () => {\r\n      axios\r\n        .get(url)\r\n        .then((res) => {\r\n          const newVideos = res.data.videos;\r\n\r\n          this.setState({\r\n            loading: false,\r\n            videos: [...this.state.videos, ...newVideos],\r\n            offset: offset + limit,\r\n            hasMore: res.data.has_more,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          this.setState({\r\n            error: err.message,\r\n            loading: false,\r\n          });\r\n        });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { loading, videos, hasMore, videosLoadingError } = this.state;\r\n    const {\r\n      classes,\r\n      location,\r\n      handleScrollPosition,\r\n    } = this.props;\r\n    const pathParams = location.pathname.split(\"/\");\r\n    const clickedTag = pathParams[pathParams.length - 1];\r\n\r\n    return (\r\n      <>\r\n        <List\r\n          videos={videos}\r\n          loading={loading}\r\n          hasMore={hasMore}\r\n          error={videosLoadingError}\r\n          loadVideos={this.loadVideos}\r\n          clickedTag={clickedTag}\r\n          scrollPosition={0}\r\n          handleScrollPosition={handleScrollPosition}\r\n        />\r\n\r\n        {/* {!hasMore && <div>No more videos</div>} */}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(FilteredVideos);\r\n"],"names":[],"sourceRoot":""}